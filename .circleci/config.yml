# PHP CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-php/
version: 2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # Specify the version you desire here
      - image: ubuntu:20.04

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout

      - run: apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: apt upgrade
      - run: apt install -y git
      - run: apt install -y apache2
      - run: apt install -y php
      - run: apt install -y mcrypt  
      - run: apt install -y php-mysqli
      - run: apt install -y php-gd 
      - run: apt install -y php-xml 
      - run: apt install -y php-zip
      - run: apt install -y mysql-server
      - run: rm -rf /var/www/html
      - run: git clone https://github.com/fdajek/jorani.git		/var/www/html/
      - run: mysql -u root  -e "CREATE USER 'fdajek'@'localhost' IDENTIFIED BY 'hzerg734';"
      - run: mysql -u root  -e "GRANT all ON *.* TO 'fdajek'@'localhost';"
      - run: mysql -u root  -e "create database lms;
     

      
